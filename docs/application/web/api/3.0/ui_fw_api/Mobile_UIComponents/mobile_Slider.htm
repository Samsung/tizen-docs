<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
	<script type="text/javascript" src="../snippet.js"></script>
	<meta http-equiv="content-type" content="text/html; charset=utf-8">
	<link href="../styles.css" rel="StyleSheet" type="text/css">
	<link href="../snippet.css" rel="StyleSheet" type="text/css">
	<title>Slider</title>
</head>
<body onload="prettyPrint()" id="content">


<h1>Slider</h1>

<p>The slider component changes the range-type browser input to sliders.</p>

<h2>Table of Contents</h2>
<ol class="toc">
	
		<li><a href="#default-selectors0.42985791829414666">Default Selectors</a>
			
		</li>
	
		<li><a href="#manual-constructor0.6728984923101962">Manual Constructor</a>
			
		</li>
	
		<li><a href="#html-examples0.5146947458852082">HTML Examples</a>
						</li>
	
		<li><a href="#options-list">Options</a>
			
		</li>

		<li><a href="#methods0.2250751326791942">Methods</a>
			
		</li>
	
</ol>

<h2><a id="default-selectors0.42985791829414666"></a>Default Selectors</h2>

<p>By default, all <code>&lt;input&gt;</code> elements with the <code>type="range"</code> attribute and <code>data-type="range"</code> and <code>data-role="slider"</code> are displayed as Tizen Web UI sliders.</p>



<h2><a id="manual-constructor0.6728984923101962"></a>Manual Constructor</h2>

<p>To manually create a slider component, use the component constructor from the <code>tau</code> namespace</p>

<pre class="prettyprint">&lt;input id="slider"/&gt;
&lt;script&gt;
   var sliderElement = document.getElementById("slider"),
       slider = tau.widget.Slider(sliderElement);
&lt;/script&gt;
</pre>

<p>The constructor requires an <code>HTMLElement</code> parameter to create the component, and you can get it with the <code>document.getElementById()</code> method. The constructor can also take a second parameter, which is an object defining the configuration options for the component.</p>

<h2><a id="html-examples0.5146947458852082"></a>HTML Examples</h2>

<p>To create slider input:</p>

<pre class="prettyprint">&lt;input type="range" name="slider-1" id="slider" value="60" min="0" max="100"/&gt;
</pre>

	<h2><a id="options-list"></a>Options</h2>
    <p>The following table lists the options for the slider component.</p>
	<table>
		<tbody>
			<tr>
				<th>Option</th>
				<th>Input type</th>
				<th>Default value</th>
				<th>Description</th>
			</tr>

			<tr>
				<td class="option"><span style="font-family: Courier New,Courier,monospace">data-type</span></td>
				<td class="option">"normal" | "center"</td>
				<td class="option">"normal"</td>
				<td class="option">Sets slider style. center type is pointing to the center of the slider.</td>
			</tr>

			<tr>
				<td class="option"><span style="font-family: Courier New,Courier,monospace">data-orientation</span></td>
				<td class="option">"horizontal" | "vertical"</td>
				<td class="option">"horizontal"</td>
				<td class="option">Sets slider orientation.</td>
			</tr>

			<tr>
				<td class="option"><span style="font-family: Courier New,Courier,monospace">data-expand</span></td>
				<td class="option">boolean</td>
				<td class="option">false</td>
				<td class="option">Sets whether the slider handler is enabled.</td>
			</tr>

		</tbody>
	</table>



<h2><a id="methods0.2250751326791942"></a>Methods</h2>

<p>To call a method on the component, use one of the existing APIs:</p>

<pre class="prettyprint">&lt;input id="slider" type="range" name="slider" value="60" min="0" max="100"/&gt;
&lt;script&gt;
   var slider = document.getElementById("slider"),
       slider = tau.widget.Slider(slider);

   /*
      slider.methodName(methodArgument1, methodArgument2, ...);
      For example:
   */
   var value = slider.value(5);
&lt;/script&gt;
</pre>

	<h3>Summary</h3>
	<table class="informaltable">
		<thead>
		<tr>
			<th>Method</th>
			<th>Description</th>
		</tr>
		</thead>
		<tbody>
	
				<tr>
					<td>
						<pre class="intable prettyprint">Slider <a href="#method-disable">disable</a>() </pre>
					</td>
					<td><p>Disables the slider.</p></td>
				</tr>
			
		
			
				<tr>
					<td>
						<pre class="intable prettyprint">Slider <a href="#method-enable">enable</a>() </pre>
					</td>
					<td><p>Enables the slider.</p></td>
				</tr>
			
		
			

				<tr>
					<td>
						<pre class="intable prettyprint">Slider <a href="#method-refresh">refresh</a>() </pre>
					</td>
					<td><p>Refreshes a slider markup.</p></td>
				</tr>
			
		

			
				<tr>
					<td>
						<pre class="intable prettyprint">string <a href="#method-value">value</a>() </pre>
					</td>
					<td><p>Gets or sets a value.</p></td>
				</tr>
			
		
		</tbody>
	</table>
	<dl>

			
				<dt class="method" id="addidp28072"><code><b><span class="methodName"
																   id="method-disable">disable</span></b></code></dt>
				<dd>
					<div class="brief">
						<p>Disables the slider.</p>
					</div>
					<div class="synopsis">
						<pre class="signature prettyprint">Slider disable() </pre>
					</div>
					
					<div class="description">
						<p>
							<p>The method sets the disabled attribute for the slider and changes the look of the slider to the disabled state.</p>

						</p>
					</div>

					<div class="returntype">
						<p><span class="return">Return value:</span></p>
						
							<table>
								<tbody>
								<tr>
									<th>Type</th>
									<th>Description</th>
								</tr>
								<tr>
									<td>Slider</td>
									<td>Returns this.</td>
								</tr>
								</tbody>
							</table>
					</div>
						<div class="example">
							<span class="example"><p>Code
								example:</p><p></p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;input id="mySlider1" name="mySlider1" data-popup='false' type="range" value="5" min="0" max="10"/&gt;
&lt;script&gt;
   var slider = document.getElementById("mySlider1"),
       sliderWidget = tau.widget.Slider(slider);
   sliderWidget.disable();
&lt;/script&gt;
</pre>
						</div>

				</dd>

				<dt class="method" id="addidp28072"><code><b><span class="methodName"
																   id="method-enable">enable</span></b></code></dt>
				<dd>
					<div class="brief">
						<p>Enables the slider.</p>
					</div>
					<div class="synopsis">
						<pre class="signature prettyprint">Slider enable() </pre>
					</div>
					
					<div class="description">
						<p>
							<p>The method removes the disabled attribute from the slider and changes the look of the slider to the enabled state.</p>




						</p>
					</div>

					<div class="returntype">
						<p><span class="return">Return value:</span></p>
						
							<table>
								<tbody>
								<tr>
									<th>Type</th>
									<th>Description</th>
								</tr>
								<tr>
									<td>Slider</td>
									<td>Returns this.</td>
								</tr>
								</tbody>
							</table>

					</div>
					
						<div class="example">
							<span class="example"><p>Code
								example :</p><p></p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;input id="mySlider1" name="mySlider1" data-popup='false' type="range" value="5" min="0" max="10"/&gt;
&lt;script&gt;
   var slider = document.getElementById("mySlider1"),
       sliderWidget = tau.widget.Slider(slider);
   sliderWidget.enable();
&lt;/script&gt;
</pre>
						</div>

				</dd>

				<dt class="method" id="addidp28072"><code><b><span class="methodName"
																   id="method-refresh">refresh</span></b></code></dt>
				<dd>
					<div class="brief">
						<p>Refreshes a slider markup.</p>
					</div>
					<div class="synopsis">
						<pre class="signature prettyprint">Slider refresh() </pre>
					</div>
					
					<div class="description">
						<p>
							<p>The method rebuilds the DOM structure of the slider component. It must be called after you manually change the HTML attributes of the component's DOM structure.</p>

<p>The method is called automatically after any component option is changed.</p>




						</p>
					</div>
					
					
					
					<div class="returntype">
						<p><span class="return">Return value:</span></p>
						
							<table>
								<tbody>
								<tr>
									<th>Type</th>
									<th>Description</th>
								</tr>
								<tr>
									<td>Slider</td>
									<td>Returns this.</td>
								</tr>
								</tbody>
							</table>
						
						
					</div>
					
						<div class="example">
							<span class="example"><p>Code
								example :</p><p></p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;input id="mySlider1" name="mySlider1" data-popup='false' type="range" value="5" min="0" max="10"/&gt;
&lt;script&gt;
   var slider = document.getElementById("mySlider1"),
       sliderWidget = tau.widget.Slider(slider);
   sliderWidget.refresh();
&lt;/script&gt;
</pre>
						</div>

				</dd>
			

				<dt class="method" id="addidp28072"><code><b><span class="methodName"
																   id="method-value">value</span></b></code></dt>
				<dd>
					<div class="brief">
						<p>Gets or sets a value.</p>
					</div>
					<div class="synopsis">
						<pre class="signature prettyprint">string value() </pre>
					</div>
					
						<p><span class="version">Since: </span>
							2.3
						</p>
					
					<div class="description">
						<p>
							<p>The method returns the element value or sets the element value.</p>




						</p>
					</div>
					
					
					
					<div class="returntype">
						<p><span class="return">Return value:</span></p>
						
							<table>
								<tbody>
								<tr>
									<th>Type</th>
									<th>Description</th>
								</tr>
								<tr>
									<td>string</td>
									<td>In the get mode, returns the element value.</td>
								</tr>
								</tbody>
							</table>
						
						
					</div>
					
						<div class="example">
							<span class="example"><p>Code
								example :</p><p></p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;input id="mySlider1" name="mySlider1" data-popup='false' type="range" value="5" min="0" max="10"/&gt;
&lt;script&gt;
   var slider = document.getElementById("mySlider1"),
       sliderWidget = tau.widget.Slider(slider);
   /* Value contains index of select tag */
   value = sliderWidget.value();
   /* Sets the index for the slider */
   sliderWidget.value("1");
&lt;/script&gt;
</pre>
						</div>

				</dd>
			
		
	</dl>


<div id="footer">
	<hr size="1">
	<font size="1">Except as noted, this content - excluding the Code Examples - is licensed under <a
			href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution
		3.0</a> and all of the Code Examples contained herein are licensed under <a
			href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br>For details, see the
		<a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</font>
</div>
</body>
</html>