<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
	<script type="text/javascript" src="../../snippet.js"></script>
	<meta http-equiv="content-type" content="text/html; charset=utf-8">
	<link href="../../styles.css" rel="StyleSheet" type="text/css">
	<link href="../../snippet.css" rel="StyleSheet" type="text/css">
	<title>Select Menu</title>
</head>
<body onload="prettyPrint()" id="content">
<h1>Select Menu</h1>

<p>The select menu component allows you to create the component in the form of a drop-down list and manage its operation.</p>

<table class="note deprecated">
        <tbody>
                <tr>
                        <th class="note deprecated">Note</th>
                </tr>
                <tr>
                        <td class="note deprecated">This component has been <span class="deprecated">DEPRECATED since <b>Tizen 2.4</b></span> and will be <i>deleted in Tizen 3.0.</i><br>
To support Backward compatibility, please import tau.support-2.3.js.</td>
                </tr>
                <tr>
                        <td class="note deprecated">Since 2.4, this component has been renamed to DropdownMenu. To use this component, please refer <a href="../mobile_DropdownMenu.htm">DropdownMenu</a> component.</td>
                </tr>
        </tbody>
</table>

<table class="note">
	<tbody>
		<tr>
			<th class="note">Note</th>
		</tr>
		<tr>
			<td class="note">This component is supported since Tizen 2.3.</td>
		</tr>
	</tbody>
</table>


<h2>Table of Contents</h2>
<ol class="toc">

		<li><a href="#default-selector">Default Selector</a>

		</li>

		<li><a href="#manual-constructor">Manual Constructor</a>

		</li>

		<li><a href="#html-examples">HTML Examples</a>


		</li>


		<li><a href="#options-list">Options</a>

		</li>

		<li><a href="#methods">Methods</a>

		</li>



</ol>

<h2><a id="default-selector"></a>Default Selector</h2>

<p>By default, all <code>&lt;select&gt;</code> elements are displayed as Tizen Web UI SelectMenu components. The <code>data-native-menu=&quot;false&quot;</code> attribute uses a custom drop-down list to select options.</p>



<h2><a id="manual-constructor"></a>Manual Constructor</h2>

<p>To manually create a select menu component, use the component constructor:</p>

<pre class="prettyprint">&lt;select id=&quot;selectmenu&quot; data-native-menu=&quot;false&quot;&gt;
   &lt;option value=&quot;1&quot;&gt;Item1&lt;/option&gt;
   &lt;option value=&quot;2&quot;&gt;Item2&lt;/option&gt;
   &lt;option value=&quot;3&quot;&gt;Item3&lt;/option&gt;
   &lt;option value=&quot;4&quot;&gt;Item4&lt;/option&gt;
&lt;/select&gt;
&lt;script&gt;
   var element = document.getElementById(&quot;selectmenu&quot;),
       widget = tau.widget.SelectMenu(element);
&lt;/script&gt;
</pre>

<h2><a id="html-examples"></a>HTML Examples</h2>

<ul><li>Creating a select menu
<p>The default value of the <code>data-native-menu</code> attribute is <code>true</code> and it creates a native SelectMenu. You can create a custom SelectMenu by setting the attribute to <code>false</code>.</p>

<pre class="prettyprint">&lt;select data-native-menu=&quot;false&quot;&gt;
   &lt;option value=&quot;1&quot;&gt;Item1&lt;/option&gt;
   &lt;option value=&quot;2&quot;&gt;Item2&lt;/option&gt;
   &lt;option value=&quot;3&quot;&gt;Item3&lt;/option&gt;
   &lt;option value=&quot;4&quot;&gt;Item4&lt;/option&gt;
&lt;/select&gt;
</pre></li>

<li>Setting the inline type

<p>When the <code>data-inline</code> attribute is set to <code>true</code>, the select menu width is determined by its text (default is <code>false</code>).</p>

<pre class="prettyprint">&lt;select id=&quot;selectmenu&quot; data-native-menu=&quot;false&quot; data-inline=&quot;true&quot;&gt;
   &lt;option value=&quot;1&quot;&gt;Item1&lt;/option&gt;
   &lt;option value=&quot;2&quot;&gt;Item2&lt;/option&gt;
   &lt;option value=&quot;3&quot;&gt;Item3&lt;/option&gt;
   &lt;option value=&quot;4&quot;&gt;Item4&lt;/option&gt;
&lt;/select&gt;
</pre></li>

<li>Using placeholder options

<p>If you use the <code>&lt;option&gt;</code> element with the <code>data-placeholder=&quot;true&quot;</code> attribute, you can make a default placeholder. The default value of the <code>data-hide-placeholder-menu-items</code> attribute is <code>true</code>, and it hides the <code>data-placeholder</code> option. To keep the option visible, use the <code>data-hide-placeholder-menu-items=&quot;false&quot;</code> attribute.</p>

<pre class="prettyprint">&lt;select id=&quot;selectmenu&quot; data-native-menu=&quot;false&quot; data-hide-placeholder-menu-items=&quot;false&quot;&gt;
   &lt;option value=&quot;choose-one&quot; data-placeholder=&quot;true&quot;&gt;Choose an option&lt;/option&gt;
   &lt;option value=&quot;1&quot;&gt;Item1&lt;/option&gt;
   &lt;option value=&quot;2&quot;&gt;Item2&lt;/option&gt;
   &lt;option value=&quot;3&quot;&gt;Item3&lt;/option&gt;
   &lt;option value=&quot;4&quot;&gt;Item4&lt;/option&gt;
&lt;/select&gt;
</pre></li></ul>

	<h2><a id="options-list"></a>Options</h2>

	<p>The following table lists the options for the select menu component.</p>
	<table>
		<tbody>
		<tr>
			<th>Option</th>
			<th>Input type</th>
			<th>Default value</th>
			<th>Description</th>
		</tr>

			<tr>
				<td class="option"><span style="font-family: Courier New,Courier,monospace">data-native-menu</span></td>
				<td class="option">boolean</td>
				<td class="option">true</td>
				<td class="option">Sets whether the select menu component is of a native or custom type.</td>
			</tr>

			<tr>
				<td class="option"><span style="font-family: Courier New,Courier,monospace">data-hide-placeholder-menu-items</span></td>
				<td class="option">boolean</td>
				<td class="option">true</td>
				<td class="option">Hides or reveals the placeholder option in the drop-down list of the select menu.</td>
			</tr>

			<tr>
				<td class="option"><span style="font-family: Courier New,Courier,monospace">data-inline</span></td>
				<td class="option">boolean</td>
				<td class="option">false</td>
				<td class="option">Sets whether the select menu component is of an inline or normal type.</td>
			</tr>

		</tbody>
	</table>

<h2><a id="methods"></a>Methods</h2>

<p>To call a method on the component, use one of the existing APIs:</p>

<ul><li>TAU API (<strong>RECOMMENDED</strong>):

<pre class="prettyprint">var element = document.getElementById(&quot;selectmenu&quot;),
    widget = tau.widget.SelectMenu(element);
widget.methodName(methodArgument1, methodArgument2, ...);
</pre></li>

<li>jQuery API (<strong>support for backward compatibility</strong>):

<pre class="prettyprint">$(&quot;.selector&quot;).selectmenu(&quot;methodName&quot;, methodArgument1, methodArgument2, ...);
</pre></li></ul>


	<h3>Summary</h3>
	<table class="informaltable">
		<thead>
		<tr>
			<th>Method</th>
			<th>Description</th>
		</tr>
		</thead>
		<tbody>

				<tr>
					<td>
						<pre class="intable prettyprint"><a href="#method-open">open</a>() </pre>
					</td>
					<td><p>Opens the select menu.</p></td>
				</tr>



				<tr>
					<td>
						<pre class="intable prettyprint"><a href="#method-close">close</a>() </pre>
					</td>
					<td><p>Closes the select menu.</p></td>
				</tr>


		</tbody>
	</table>
	<dl>


				<dt class="method" id="addidp28072"><code><b><span class="methodName"
																   id="method-open">open</span></b></code></dt>
				<dd>
					<div class="brief">
						<p>Opens the select menu.</p>
					</div>
					<div class="synopsis">
						<pre class="signature prettyprint">open() </pre>
					</div>

					<div class="description">
						<p>

						</p>
					</div>



					<div class="returntype">
						<p><span class="return">Return value:</span></p>


							No return value

					</div>
					<div class="example">
						<span class="example"><p>Code
								example:</p><p></p></span>
						<pre name="code" class="examplecode
							prettyprint">
&lt;select id=&quot;selectmenu&quot; data-native-menu=&quot;false&quot;&gt;
   &lt;option value=&quot;1&quot;&gt;Item1&lt;/option&gt;
   &lt;option value=&quot;2&quot;&gt;Item2&lt;/option&gt;
   &lt;option value=&quot;3&quot;&gt;Item3&lt;/option&gt;
   &lt;option value=&quot;4&quot;&gt;Item4&lt;/option&gt;
&lt;/select&gt;
&lt;script&gt;
   var elSelectMenu = document.getElementById(&quot;selectmenu&quot;),
       widget = tau.widget.SelectMenu(elSelectMenu);
   widget.open();
&lt;/script&gt;
</pre>
						</div>

				</dd>


				<dt class="method" id="addidp28072"><code><b><span class="methodName"
																   id="method-close">close</span></b></code></dt>
				<dd>
					<div class="brief">
						<p>Closes the select menu.</p>
					</div>
					<div class="synopsis">
						<pre class="signature prettyprint">close() </pre>
					</div>

					<div class="description">
						<p>

						</p>
					</div>



					<div class="returntype">
						<p><span class="return">Return value:</span></p>


							No return value

					</div>
					<div class="example">
						<span class="example"><p>Code
								example:</p><p></p></span>
						<pre name="code" class="examplecode
							prettyprint">
&lt;select id=&quot;selectmenu&quot; data-native-menu=&quot;false&quot;&gt;
   &lt;option value=&quot;1&quot;&gt;Item1&lt;/option&gt;
   &lt;option value=&quot;2&quot;&gt;Item2&lt;/option&gt;
   &lt;option value=&quot;3&quot;&gt;Item3&lt;/option&gt;
   &lt;option value=&quot;4&quot;&gt;Item4&lt;/option&gt;
&lt;/select&gt;
&lt;script&gt;
   var elSelectMenu = document.getElementById(&quot;selectmenu&quot;),
       widget = tau.widget.SelectMenu(elSelectMenu);
   widget.close();
&lt;/script&gt;
</pre>
						</div>

				</dd>




	</dl>

<div id="footer">
	<hr size="1">
	<font size="1">Except as noted, this content - excluding the Code Examples - is licensed under <a
			href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution
		3.0</a> and all of the Code Examples contained herein are licensed under <a
			href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br>For details, see the
		<a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</font>
</div>
</body>
</html>
