<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
	<script type="text/javascript" src="../../snippet.js"></script>
	<meta http-equiv="content-type" content="text/html; charset=utf-8">
	<link href="../../styles.css" rel="StyleSheet" type="text/css">
	<link href="../../snippet.css" rel="StyleSheet" type="text/css">
	<title>Notification</title>
</head>
<body id="content">


<h1>Notification</h1>

<p>The notification component shows a pop-up on the screen for providing notifications.</p>

<table class="note deprecated">
        <tbody>
                <tr>
                        <th class="note deprecated">Note</th>
                </tr>
                <tr>
                        <td class="note deprecated">This component has been <span class="deprecated">DEPRECATED since <b>Tizen 2.4</b></span> and will be <i>deleted in Tizen 3.0.</i><br>
To support Backward compatibility, please import tau.support-2.3.js.</td>
                </tr>
        </tbody>
</table>


<h2>Table of Contents</h2>
<ol class="toc">

		<li><a href="#default-selectors0.8505647901911288">Default Selectors</a></li>

		<li><a href="#manual-constructor0.923238382441923">Manual Constructor</a></li>

		<li><a href="#html-examples0.8878875768277794">HTML Examples</a></li>

		<li><a href="#options-list">Options</a></li>

		<li><a href="#methods-list">Methods</a></li>

</ol>

<h2><a id="default-selectors0.8505647901911288"></a>Default Selectors</h2>

<p>By default, all elements with the <code>data-role=&quot;notification&quot;</code>  attribute are displayed as notifications.</p>

<p>Use the <code>&lt;p&gt;</code> element for messages and the <code>&lt;img&gt;</code> element for icons.</p>

<h2><a id="manual-constructor0.923238382441923"></a>Manual Constructor</h2>

<p>To manually create a notification component, use the component constructor from the <code>tau</code> namespace (<strong>RECOMMENDED</strong>):</p>

<pre class="prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notification&quot; data-type=&quot;smallpoup&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   var notification = tau.widget.Notification(document.getElementById(&quot;notification&quot;));
&lt;/script&gt;
</pre>

<p>If the jQuery library is loaded, you can use its method (<strong>support for backward compatibility</strong>):</p>

<pre class="prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notification&quot; data-type=&quot;smallpoup&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   var notification = $(&quot;#notification&quot;).notification();
&lt;/script&gt;
</pre>

<h2><a id="html-examples0.8878875768277794"></a>HTML Examples</h2>

<h3><a id='create-notification smallpoup0.3612392577342689'></a>Smallpopup Notification</h3>

<p>A smallpopup notification has a single line of text and is positioned at the bottom of the active page. The smallpopup is the default notification type.</p>

<ul>

<li>

<p>To create a smallpopup notification using the TAU API (<strong>RECOMMENDED</strong>):</p>

<pre class="prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notification&quot; data-type=&quot;smallpopup&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   /* Get component instance or create new instance if component does not exist */
   var notification = tau.widget.Notification(document.getElementById(&quot;notification&quot;));

   /* Open notification */
   notification.open();
&lt;/script&gt;
</pre>

</li>

<li>

<p>To create a smallpopup notification using the jQuery API (<strong>support for backward compatibility</strong>):</p>

<pre class="prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notification&quot; data-type=&quot;smallpoup&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   /* Open component using jQuery notation */
   $(&quot;#notification&quot;).notification(&quot;open&quot;)
&lt;/script&gt;
</pre>

</li>

</ul>

<h3><a id='create-notification ticker0.17640168755315244'></a>Ticker Notification</h3>

<p>A ticker notification has a maximum of 2 lines of text and is positioned at the top of the active page. You can set an icon for a ticker notification.</p>

		<tbody>
		<tr>
			<th class="note">Note</th>
		</tr>
		<tr>
			<td class="note">You can add an icon only to a ticker notification.</td>
		</tr>
		</tbody>
	</table>

<ul>

<li>

<p>To create a ticker notification using the TAU API (<strong>RECOMMENDED</strong>):</p>

<pre class="prettyprint">&lt;div data-role=&quot;notification&quot; id=&quot;notification&quot; data-type=&quot;ticker&quot;&gt;
   &lt;p&gt;First line of message&lt;/p&gt;
   &lt;p&gt;Second line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   /* Get component instance or create new instance if component does not exist */
   var notification = tau.widget.Notification(document.getElementById(&quot;notification&quot;));

   /* Open notification */
   notification.open();
&lt;/script&gt;
</pre>

</li>

<li>

<p>To create a ticker notification using the jQuery API (<strong>support for backward compatibility</strong>):</p>

<pre class="prettyprint">&lt;div data-role=&quot;notification&quot; id=&quot;notification&quot; data-type=&quot;ticker&quot;&gt;
   &lt;p&gt;First line of message&lt;/p&gt;
   &lt;p&gt;Second line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   /* Open component using jQuery notation */
   $(&quot;#notification&quot;).notification(&quot;open&quot;)
&lt;/script&gt;
</pre>

</li>

<li>

<p>To create a ticker notification with an icon using the TAU API (<strong>RECOMMENDED</strong>):</p>

<pre class="prettyprint">&lt;div data-role=&quot;notification&quot; id=&quot;notification&quot; data-type=&quot;ticker&quot;&gt;
   &lt;img src=&quot;icon.png&quot;/&gt;
   &lt;p&gt;First line of message&lt;/p&gt;
   &lt;p&gt;Second line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   /* Open notification */
   notification.open();
&lt;/script&gt;
</pre>

</li>

<li>

<p>To create a ticker notification with an icon using the jQuery API (<strong>support for backward compatibility</strong>):</p>

<pre class="prettyprint">&lt;div data-role=&quot;notification&quot; id=&quot;notification&quot; data-type=&quot;ticker&quot;&gt;
   &lt;img src=&quot;icon.png&quot;/&gt;
   &lt;p&gt;First line of message&lt;/p&gt;
   &lt;p&gt;Second line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   /* Open component using jQuery notation */
   $(&quot;#notification&quot;).notification(&quot;open&quot;)
&lt;/script&gt;
</pre>

</li>

</ul>

<h3><a id='create-notification wih interval0.0953348446637392'></a>Notification with an Interval</h3>

<p>An interval defines the length of time a notification is displayed. After the time is up, the notification closes automatically. If you do not specify an interval, the notification is displayed until the user manually closes it.</p>

<p>The value of the <code>data-interval</code> attribute is a positive number of milliseconds. For example, <code>data-interval=&quot;2000&quot;</code> sets the notification to close automatically after 2 seconds.</p>

<ul>

<li>

<p>To create a notification with an interval using the TAU API (<strong>RECOMMENDED</strong>):</p>

<pre class="prettyprint">&lt;div data-role=&quot;notification&quot; id=&quot;notification&quot; data-type=&quot;ticker&quot; data-interval=&quot;4000&quot;&gt;
   &lt;img src=&quot;icon.png&quot;/&gt;
   &lt;p&gt;I will close in 4* seconds!&lt;/p&gt;
   &lt;p&gt;* starts counting from component opening&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   /* Get component instance or create new instance if component does not exist */
   var notification = tau.widget.Notification(document.getElementById(&quot;notification&quot;));

   /* Open notification */
   notification.open();
&lt;/script&gt;
</pre>

</li>

<li>

<p>To create a notification with an interval using the jQuery API (<strong>support for backward compatibility</strong>):</p>

<pre class="prettyprint">&lt;div data-role=&quot;notification&quot; id=&quot;notification&quot; data-type=&quot;ticker&quot; data-interval=&quot;4000&quot;&gt;
   &lt;img src=&quot;icon.png&quot;/&gt;
   &lt;p&gt;I will close in 4* seconds!&lt;/p&gt;
   &lt;p&gt;* starts counting from component opening&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   /* Open component using jQuery notation */
   $(&quot;#notification&quot;).notification(&quot;open&quot;)
&lt;/script&gt;
</pre>

</li>

</ul>

	<h2><a id="options-list"></a>Options</h2>

<p>The following table lists the options for the notification component.</p>
	<table>
		<tbody>
		<tr>
			<th>Option</th>
			<th>Input type</th>
			<th>Default value</th>
			<th>Description</th>
		</tr>



			<tr>
				<td class="option"><span style="font-family: Courier New,Courier,monospace">data-type</span></td>
				<td class="option">&quot;smallpopup&quot; | &quot;ticker&quot;</td>
				<td class="option">&quot;smallpopup&quot;</td>
				<td class="option">Notification type.</td>
			</tr>
			<tr>
				<td class="option"><span style="font-family: Courier New,Courier,monospace">data-interval</span></td>
				<td class="option">number</td>
				<td class="option">null</td>
				<td class="option"><p>Time interval in milliseconds after which the notification closes automatically.</p></td>
			</tr>

		</tbody>
	</table>



	<h2><a id="methods-list"></a>Methods</h2>

	<h3>Summary</h3>
	<table class="informaltable">
		<thead>
		<tr>
			<th>Method</th>
			<th>Description</th>
		</tr>
		</thead>
		<tbody>

				<tr>
					<td>
						<pre class="intable prettyprint"><a href="#method-close">close</a>() </pre>
					</td>
					<td><p>Closes the notification on the screen.</p></td>
				</tr>



				<tr>
					<td>
						<pre class="intable prettyprint"><a href="#method-destroy">destroy</a>() </pre>
					</td>
					<td><p>Removes the component.</p></td>
				</tr>



				<tr>
					<td>
						<pre class="intable prettyprint"><a href="#method-disable">disable</a>() </pre>
					</td>
					<td><p>Disables the component.</p></td>
				</tr>



				<tr>
					<td>
						<pre class="intable prettyprint"><a href="#method-enable">enable</a>() </pre>
					</td>
					<td><p>Enables the component.</p></td>
				</tr>



				<tr>
					<td>
						<pre class="intable prettyprint"><a href="#method-icon">icon</a>(string src) </pre>
					</td>
					<td><p>Creates an icon or changes an existing icon to a new one.</p></td>
				</tr>



				<tr>
					<td>
						<pre class="intable prettyprint"><a href="#method-open">open</a>() </pre>
					</td>
					<td><p>Displays the notification on the screen.</p></td>
				</tr>



				<tr>
					<td>
						<pre class="intable prettyprint">Notification <a href="#method-refresh">refresh</a>() </pre>
					</td>
					<td><p>Refreshes the notification and resets its interval, if specified.</p></td>
				</tr>



				<tr>
					<td>
						<pre class="intable prettyprint">Array <a href="#method-text">text</a>(string text0, string text1) </pre>
					</td>
					<td><p>Gets or sets the notification text.</p></td>
				</tr>


		</tbody>
	</table>
	<dl>

				<dt class="method" id="addidp28072"><code><b><span class="methodName"
																   id="method-close">close</span></b></code></dt>
				<dd>
					<div class="brief">
						<p>Closes the notification on the screen.</p>
					</div>
					<div class="synopsis">
						<pre class="signature prettyprint">close() </pre>
					</div>

					<div class="description">
						<p>



						</p>
					</div>



					<div class="returntype">
						<p><span class="return">Return value:</span></p>


							No return value

					</div>

						<div class="example">
							<span class="example"><p>Code
								example (TAU API <strong>RECOMMENDED</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notificationSelector&quot; data-type=&quot;ticker&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   var notification = tau.widget.Notification(document.getElementById(&quot;notificationSelector&quot;));
   notification.close();
&lt;/script&gt;
</pre>
						</div>

						<div class="example">
							<span class="example"><p>Code
								example (jQuery API <strong>support for backward compatibility</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notificationSelector&quot; data-type=&quot;ticker&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   $(&quot;#notificationSelector&quot;).notification(&quot;close&quot;);
&lt;/script&gt;
</pre>
						</div>

				</dd>



				<dt class="method" id="addidp28072"><code><b><span class="methodName"
																   id="method-destroy">destroy</span></b></code></dt>
				<dd>
					<div class="brief">
						<p>Removes the component.</p>
					</div>
					<div class="synopsis">
						<pre class="signature prettyprint">destroy() </pre>
					</div>

					<div class="description">
						<p>The method returns the component back to its pre-initialization state.</p>
					</div>



					<div class="returntype">
						<p><span class="return">Return value:</span></p>


							No return value

					</div>

						<div class="example">
							<span class="example"><p>Code
								example (TAU API <strong>RECOMMENDED</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;script&gt;
   var notification = tau.widget.Notification(document.getElementById(&quot;notificationSelector&quot;)),
   notification.destroy();
&lt;/script&gt;
</pre>
						</div>

						<div class="example">
							<span class="example"><p>Code
								example (jQuery API <strong>support for backward compatibility</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;script&gt;
   $(&quot;#notificationSelector&quot;).notification(&quot;destroy&quot;);
&lt;/script&gt;
</pre>
						</div>

				</dd>



				<dt class="method" id="addidp28072"><code><b><span class="methodName"
																   id="method-disable">disable</span></b></code></dt>
				<dd>
					<div class="brief">
						<p>Disables the component.</p>
					</div>
					<div class="synopsis">
						<pre class="signature prettyprint">disable() </pre>
					</div>

					<div class="description">
						<p>The method adds the <code>display:none</code> style to the component, preventing the notification from being displayed on the screen.</p>
					</div>



					<div class="returntype">
						<p><span class="return">Return value:</span></p>


							No return value

					</div>

						<div class="example">
							<span class="example"><p>Code
								example (TAU API <strong>RECOMMENDED</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notification&quot; data-type=&quot;smallpoup&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   /* Get component instance or create new instance if component does not exist */
   var notification = tau.widget.Notification(document.getElementById(&quot;notification&quot;));

   /* Disable component */
   notification.disable();
&lt;/script&gt;
</pre>
						</div>

						<div class="example">
							<span class="example"><p>Code
								example (jQuery API <strong>support for backward compatibility</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notification&quot; data-type=&quot;smallpoup&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   /* Disable component */
   $(&quot;#notification&quot;).notification(&quot;disable&quot;);
&lt;/script&gt;
</pre>
						</div>

				</dd>



				<dt class="method" id="addidp28072"><code><b><span class="methodName"
																   id="method-enable">enable</span></b></code></dt>
				<dd>
					<div class="brief">
						<p>Enables the component.</p>
					</div>
					<div class="synopsis">
						<pre class="signature prettyprint">enable() </pre>
					</div>

					<div class="description">
						<p>The method removes the <code>display:none</code> style from the component, allowing the notification to be displayed on the screen.</p>
					</div>



					<div class="returntype">
						<p><span class="return">Return value:</span></p>


							No return value

					</div>

						<div class="example">
							<span class="example"><p>Code
								example (TAU API <strong>RECOMMENDED</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notification&quot; data-type=&quot;smallpoup&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   /* Get component instance or create new instance if component does not exist */
   var notification = tau.widget.Notification(document.getElementById(&quot;notification&quot;));

   /* Enable component */
   notification.enable();
&lt;/script&gt;
</pre>
						</div>

						<div class="example">
							<span class="example"><p>Code
								example (jQuery API <strong>support for backward compatibility</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notification&quot; data-type=&quot;smallpoup&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   /* Enable component */
   $(&quot;#notification&quot;).notification(&quot;enable&quot;);
&lt;/script&gt;
</pre>
						</div>

				</dd>



				<dt class="method" id="addidp28072"><code><b><span class="methodName"
																   id="method-icon">icon</span></b></code></dt>
				<dd>
					<div class="brief">
						<p>Creates an icon or changes an existing icon to a new one.</p>
					</div>
					<div class="synopsis">
						<pre class="signature prettyprint">icon(string src) </pre>
					</div>

					<div class="description">
						<p>The method resets the CSS classes on the image element.</p>
					</div>

					<div class="parameters">
						<p><span class="param">Parameters:</span></p>
					<table>
					<tbody>
					<tr>
						<th>Parameter</th>
						<th>Type</th>
						<th>Required/optional</th>
						<th>Default value</th>
						<th>Description</th>
					</tr>


					<tr>
						<td><span style="font-family: Courier New,Courier,monospace">src</span></td>
						<td>string</td>
						<td>Required</td>
						<td></td>
						<td>URL of the image file to use as the icon.</td>
					</tr>


					</tbody>
					</table>
					</div>

					<div class="returntype">
						<p><span class="return">Return value:</span></p>


							No return value

					</div>

						<div class="example">
							<span class="example"><p>Code
								example (TAU API <strong>RECOMMENDED</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notificationSelector&quot; data-type=&quot;smallpoup&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   var notification = tau.widget.Notification(document.getElementById(&quot;notificationSelector&quot;));
   notification.icon(&quot;some-image.png&quot;);
&lt;/script&gt;
</pre>
						</div>

						<div class="example">
							<span class="example"><p>Code
								example (jQuery API <strong>support for backward compatibility</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notificationSelector&quot; data-type=&quot;smallpoup&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   $(&quot;#notificationSelector&quot;).notification(&quot;icon&quot;, &quot;some-image.png&quot;);
&lt;/script&gt;
</pre>
						</div>

				</dd>



				<dt class="method" id="addidp28072"><code><b><span class="methodName"
																   id="method-open">open</span></b></code></dt>
				<dd>
					<div class="brief">
						<p>Displays the notification on the screen.</p>
					</div>
					<div class="synopsis">
						<pre class="signature prettyprint">open() </pre>
					</div>

					<div class="description">
						<p>



						</p>
					</div>



					<div class="returntype">
						<p><span class="return">Return value:</span></p>


							No return value

					</div>

						<div class="example">
							<span class="example"><p>Code
								example (TAU API <strong>RECOMMENDED</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notificationSelector&quot; data-type=&quot;smallpoup&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   var notification = tau.widget.Notification(document.getElementById(&quot;notificationSelector&quot;));
   notification.open();
&lt;/script&gt;
</pre>
						</div>

						<div class="example">
							<span class="example"><p>Code
								example (jQuery API <strong>support for backward compatibility</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notificationSelector&quot; data-type=&quot;smallpoup&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   $(&quot;#notificationSelector&quot;).notification(&quot;open&quot;);
&lt;/script&gt;
</pre>
						</div>

				</dd>



				<dt class="method" id="addidp28072"><code><b><span class="methodName"
																   id="method-refresh">refresh</span></b></code></dt>
				<dd>
					<div class="brief">
						<p>Refreshes the notification and resets its interval, if specified.</p>
					</div>
					<div class="synopsis">
						<pre class="signature prettyprint">Notification refresh() </pre>
					</div>

					<div class="description">
						<p>



						</p>
					</div>



					<div class="returntype">
						<p><span class="return">Return value:</span></p>

							<table>
								<tbody>
								<tr>
									<th>Type</th>
									<th>Description</th>
								</tr>
								<tr>
									<td>Notification</td>
									<td>Returns this.</td>
								</tr>
								</tbody>
							</table>


					</div>

						<div class="example">
							<span class="example"><p>Code
								example (TAU API <strong>RECOMMENDED</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notificationSelector&quot; data-type=&quot;smallpoup&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   var notification = tau.widget.Notification(document.getElementById(&quot;notificationSelector&quot;));
   notification.refresh();
&lt;/script&gt;
</pre>
						</div>

						<div class="example">
							<span class="example"><p>Code
								example (jQuery API <strong>support for backward compatibility</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notificationSelector&quot; data-type=&quot;smallpoup&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   $(&quot;#notificationSelector&quot;).notification(&quot;refresh&quot;);
&lt;/script&gt;
</pre>
						</div>

				</dd>



				<dt class="method" id="addidp28072"><code><b><span class="methodName"
																   id="method-text">text</span></b></code></dt>
				<dd>
					<div class="brief">
						<p>Gets or sets the notification text.</p>
					</div>
					<div class="synopsis">
						<pre class="signature prettyprint">Array text(string text0, string text1) </pre>
					</div>

					<div class="description">
						<p>If no parameters are specified, the method returns the current notification text as an array.</p>
					</div>

					<div class="parameters">
						<p><span class="param">Parameters:</span></p>
					<table>
					<tbody>
					<tr>
						<th>Parameter</th>
						<th>Type</th>
						<th>Required/optional</th>
						<th>Default value</th>
						<th>Description</th>
					</tr>


					<tr>
						<td><span style="font-family: Courier New,Courier,monospace">text0</span></td>
						<td>string</td>
						<td>Required</td>
						<td></td>
						<td>First line of notification text.</td>
					</tr>

					<tr>
						<td><span style="font-family: Courier New,Courier,monospace">text1</span></td>
						<td>string</td>
						<td>Required</td>
						<td></td>
						<td>Second line of notification text.</td>
					</tr>


					</tbody>
					</table>
					</div>

					<div class="returntype">
						<p><span class="return">Return value:</span></p>

							<table>
								<tbody>
								<tr>
									<th>Type</th>
									<th>Description</th>
								</tr>
								<tr>
									<td>?Array</td>
									<td>If no parameters are specified, returns the current notification text.</td>
								</tr>
								</tbody>
							</table>


					</div>

						<div class="example">
							<span class="example"><p>Code
								example (TAU API <strong>RECOMMENDED</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notificationSelector&quot; data-type=&quot;ticker&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
   &lt;p&gt;Second line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   var notification = tau.widget.Notification(document.getElementById(&quot;notificationSelector&quot;));
   var widgetText = notification.text();

   alert(widgetText);
   /* Alert &quot;Line of message,Second line of message&quot; */
&lt;/script&gt;
</pre>
						</div>

						<div class="example">
							<span class="example"><p>Code
								example (jQuery API <strong>support for backward compatibility</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notificationSelector&quot; data-type=&quot;ticker&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
   &lt;p&gt;Second line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   var widgetText = $(&quot;#notificationSelector&quot;).notification(&quot;text&quot;);

   alert(widgetText);
   /* Alert &quot;Line of message,Second line of message&quot; */
&lt;/script&gt;
</pre>
						</div>

						<div class="example">
							<span class="example"><p>Code
								example (TAU API <strong>RECOMMENDED</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notificationSelector&quot; data-type=&quot;ticker&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
   &lt;p&gt;Second line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   var notification = tau.widget.Notification(document.getElementById(&quot;notificationSelector&quot;));

   notification.text(&quot;This is a new Notification!&quot;, &quot;This is an example&quot;);
&lt;/script&gt;
</pre>
						</div>

						<div class="example">
							<span class="example"><p>Code
								example (jQuery API <strong>support for backward compatibility</strong>):</p></span>
							<pre name="code" class="examplecode
							prettyprint">
&lt;div data-role=&quot;notification&quot; id=&quot;notificationSelector&quot; data-type=&quot;ticker&quot;&gt;
   &lt;p&gt;Line of message&lt;/p&gt;
&lt;/div&gt;
&lt;script&gt;
   $(&quot;#notificationSelector&quot;).notification(&quot;text&quot;, &quot;This is new Notification!&quot;, &quot;This is an example&quot;);
&lt;/script&gt;
</pre>
						</div>

				</dd>


	</dl>

<div id="footer">
	<hr size="1">
	<font size="1">Except as noted, this content - excluding the Code Examples - is licensed under <a
			href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution
		3.0</a> and all of the Code Examples contained herein are licensed under <a
			href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br>For details, see the
		<a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</font>
</div>
<script>
	document.addEventListener("DOMContentLoaded", function () {
		prettyPrint();
	});
</script>
</body>
</html>
