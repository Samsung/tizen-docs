<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
	<script type="text/javascript" src="../snippet.js"></script>
	<meta http-equiv="content-type" content="text/html; charset=utf-8">
	<link href="../styles.css" rel="StyleSheet" type="text/css">
	<link href="../snippet.css" rel="StyleSheet" type="text/css">
	<title>Progress</title>
</head>
<body id="content">


<h1>Progress</h1>

<p>The progress component shows that an operation is in progress.</p>

<table class="note">
	<tbody>
	<tr>
		<th class="note">Note</th>
	</tr>
	<tr>
		<td class="note">This component is supported since Tizen 2.4.</td>
	</tr>
	<tr>
		<td class="note"><i>deprecated</i> Progress and ProgressBar component has been merged and renamed to <i>new</i> <strong>Progress.</strong></td>
	</tr>
	</tbody>
</table>

<img src="../../images/mobile_progressCircle.png" width="15%">

<h2>Table of Contents</h2>
<ol class="toc">
		<li><a href="#default-selectors0.9354383451864123">Default Selectors</a>

		</li>
		<li><a href="#html-examples0.866303835529834">HTML Examples</a>

		</li>
		<li><a href="#manual-constructor0.3267326701898128">Manual Constructor</a>

		</li>
		<li><a href="#options-for widget0.13800429017283022">Options</a>

		</li>
		<li><a href="#methods0.7043644052464515">Methods</a>

		</li>
</ol>

<h2><a id="default-selectors0.9354383451864123"></a>Default Selectors</h2>

<p>By default, all elements with the <code>class=&quot;ui-progress&quot;</code> or <code>data-role=&quot;progress&quot;</code> attribute are displayed as progress components.</p>


<h2><a id="html-examples0.866303835529834"></a>HTML Examples</h2>

<h4>bar type</h4>

<pre class="prettyprint">
&lt;div class=&quot;ui-progress&quot; data-type=&quot;bar&quot;&gt;&lt;/div&gt;
</pre>

<h4>activitybar type</h4>

<pre class="prettyprint">
&lt;div class=&quot;ui-progress&quot; data-type=&quot;activitybar&quot;&gt;&lt;/div&gt;
</pre>

<h4>circle type</h4>

<pre class="prettyprint">
&lt;div class=&quot;ui-progress&quot; data-type=&quot;circle&quot;&gt;&lt;/div&gt;
</pre>

<h4>activitycircle type</h4>

<pre class="prettyprint">
&lt;div class=&quot;ui-progress&quot; data-type=&quot;activitycircle&quot;&gt;&lt;/div&gt;
</pre>



<h2><a id="manual-constructor0.3267326701898128"></a>Manual Constructor</h2>

<p>To manually create a progress component, use the component constructor from the <code>tau</code> namespace:</p>


<p>HTML code:</p>

<pre class="prettyprint">&lt;div id=&quot;progress&quot;&gt;&lt;/div&gt;
</pre>


<p>JS code:</p>

<pre class="prettyprint">
var element = document.getElementById(&quot;progress&quot;),
   progress = tau.widget.Progress(element, {type : &quot;progressbar&quot;});
</pre>


<h2><a id="options-for widget0.13800429017283022"></a>Options</h2>

<p>The options for a component can be defined as <code>data</code> attributes or passed as parameters to the constructor.</p>

<p>You can change an option for the component using the <code>option</code> method.</p>

	<table>
		<tbody>
		<tr>
			<th>Option</th>
			<th>Input type</th>
			<th>Default value</th>
			<th>Description</th>
		</tr>


			<tr>
				<td class="option"><span style="font-family: Courier New,Courier,monospace">data-type</span></td>
				<td class="option">&quot;bar&quot; | &quot;circle&quot; |<br>
					&quot;activitybar&quot; | &quot;activitycircle&quot;</td>
				<td class="option">&quot;progressbar&quot;</td>
				<td class="option">Sets type of progress component.</td>
			</tr>
            <tr>
                <td class="option"><span style="font-family: Courier New,Courier,monospace">data-size</span></td>
                <td class="option">&quot;small&quot; | &quot;medium&quot; |<br>
                    &quot;large&quot; | &quot;full&quot;</td>
                <td class="option">&quot;medium&quot;</td>
                <td class="option">Sets size of progress component.<br>
                    (It used only with &quot;circle&quot; and &quot;activitycircle&quot; type)</td>
            </tr>

			<tr>
				<td class="option"><span style="font-family: Courier New,Courier,monospace">data-value</span></td>
				<td class="option">number</td>
				<td class="option">100</td>
				<td class="option">Sets default value of progress component.</td>
			</tr>
            <tr>
                <td class="option"><span style="font-family: Courier New,Courier,monospace">data-max</span></td>
                <td class="option">number</td>
                <td class="option">100</td>
                <td class="option">Sets default max value of progress component.</td>
            </tr>

            <tr>
                <td class="option"><span style="font-family: Courier New,Courier,monospace">data-min</span></td>
                <td class="option">number</td>
                <td class="option">0</td>
                <td class="option">Sets default min value of progress component.</td>
            </tr>


        </tbody>
	</table>

<h2><a id="methods0.7043644052464515"></a>Methods</h2>

<p>To call a method on the component, please refer the following example:</p>

<p>HTML code:</p>

<pre class="prettyprint">&lt;div id=&quot;progress&quot;&gt;&lt;/div&gt;
</pre>

<p>JS code:</p>

<pre class="prettyprint">
var element = document.getElementById(&quot;progress&quot;),
    progress = tau.widget.Progress(element);

/*
   progress.methodName(argument1, argument2, ...);
   For example:
*/
progress.refresh();
</pre>

	<h3>Summary</h3>
	<table class="informaltable">
		<thead>
		<tr>
			<th>Method</th>
			<th>Description</th>
		</tr>
		</thead>
		<tbody>

				<tr>
					<td>
						<pre class="intable prettyprint"><a href="#method-value">number value</a>() </pre>
					</td>
					<td><p>Sets or gets value of Progress component.</p></td>
				</tr>

				<tr>
					<td>
						<pre class="intable prettyprint"><a href="#method-option">number option</a>() </pre>
					</td>
					<td><p>Sets or gets options of Progress component.</p></td>
				</tr>

				<tr>
					<td>
						<pre class="intable prettyprint"><a href="#method-refresh">refresh</a>() </pre>
					</td>
					<td><p>Refreshes the Progress DOM.</p></td>
				</tr>


		</tbody>
	</table>


		<dt class="method" id="addidp28072"><code><b><span class="methodName"
														   id="method-value">value</span></b></code></dt>
		<dd>
			<div class="brief">
				<p>Sets or gets value of Progress component.</p>
			</div>
			<div class="synopsis">
				<pre class="signature prettyprint">number value(number value) </pre>
			</div>
			<div class="description">
				<br>
					When this method has no parameter, it returns Progress value.<br>
				If you call value with new number, you don't need to call refresh() method because it calls automatically.
				</p>
			</div>

			<div class="returntype">
				<p><span class="return">Return value:</span></p>

				<table>
					<tbody>
					<tr>
						<th>Type</th>
						<th>Description</th>
					</tr>
					<tr>
						<td>number</td>
						<td>Returns value of Progress.</td>
					</tr>
					</tbody>
				</table>
			</div>
			<div class="example">
							<span class="example"><p>Code
								example:</p><p></p></span>
							<pre name="code" class="examplecode
							prettyprint">
var element = document.getElementById(&quot;progress&quot;),
    progress = tau.widget.Progress(element),
    originValue;

/* Get the origin value of progress */
originValue = progress.value();
console.log(originValue);

/* Set the value of progress to 70 */
progress.value(70);
</pre>
			</div>

		</dd>

		<dt class="method" id="addidp28072"><code><b><span class="methodName"
														   id="method-option">option</span></b></code></dt>
		<dd>
			<div class="brief">
				<p>Sets or gets options of Progress component.</p>
			</div>
			<div class="synopsis">
				<pre class="signature prettyprint">number option() </pre>
			</div>
			<div class="description">
				<p>
					When changing value option of progress, we recommend to use value() method.
				</p>
			</div>

			<div class="returntype">
				<p><span class="return">Return value:</span></p>

				<table>
					<tbody>
					<tr>
						<th>Type</th>
						<th>Description</th>
					</tr>
					<tr>
						<td>number</td>
						<td>Returns value of option specified in the argument.</td>
					</tr>
					</tbody>
				</table>
			</div>

			<div class="example">
							<span class="example"><p>Code
								example:</p><p></p></span>
							<pre name="code" class="examplecode
							prettyprint">
var element = document.getElementById(&quot;progress&quot;),
    progress = tau.widget.Progress(element),
    type;

progress.option("value", 50);
/* After change option, call refresh method */
progress.refresh();

/* Get type option value */
type = progress.option("type");
console.log(type);
</pre>
			</div>

		</dd>

		<dt class="method" id="addidp28072"><code><b><span class="methodName"
														   id="method-refresh">refresh</span></b></code></dt>
		<dd>
			<div class="brief">
				<p>Refresh Progress DOM.</p>
			</div>
			<div class="synopsis">
				<pre class="signature prettyprint">refresh() </pre>
			</div>
			<div class="description">
				<p>
				</p>
			</div>
			<div class="returntype">
				<p><span class="return">Return value:</span></p>


				No return value

			</div>

			<div class="example">
							<span class="example"><p>Code
								example:</p><p></p></span>
							<pre name="code" class="examplecode
							prettyprint">
var element = document.getElementById(&quot;progress&quot;),
    progress = tau.widget.Progress(element);

/* Change DOM dynamically or change option */
progress.refresh();
</pre>
			</div>

		</dd>


	</dl>


<div id="footer">
	<hr size="1">
	<font size="1">Except as noted, this content - excluding the Code Examples - is licensed under <a
			href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution
		3.0</a> and all of the Code Examples contained herein are licensed under <a
			href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br>For details, see the
		<a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</font>
</div>
<script>
	document.addEventListener("DOMContentLoaded", function () {
		prettyPrint();
	});
</script>
</body>
</html>
