<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
    <script type="text/javascript" src="../snippet.js"></script>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <link href="../styles.css" rel="StyleSheet" type="text/css">
    <link href="../snippet.css" rel="StyleSheet" type="text/css">
    <title>Globalization</title>
</head>
<body onload="prettyPrint()" id="content">
<h1>Globalization
</h1>

<h2>Table of Contents</h2>
<ol class="toc">

    <li><a href="#methods-list">Methods</a>

        <ol class="toc">

            <li><a href="#method-getCalendar">getCalendar</a>
            </li>

            <li><a href="#method-getLocale">getLocale</a>
            </li>

            <li><a href="#method-importModule">importModule</a>
            </li>

            <li><a href="#method-setLocale">setLocale</a>
            </li>

        </ol>

    </li>

</ol>







<h2><a id="methods-list"></a>Methods</h2>

<h3>Summary</h3>
<table class="informaltable">
    <thead>
    <tr>
        <th>Method</th>
        <th>Description</th>
    </tr>
    </thead>
    <tbody>


    <tr>
        <td>
            <pre class="intable prettyprint">Object <a href="#method-getCalendar">getCalendar</a> (  ) </pre>
        </td>
        <td><p>Gets Gregorian calendar.</p></td>
    </tr>



    <tr>
        <td>
            <pre class="intable prettyprint">string <a href="#method-getLocale">getLocale</a> (  ) </pre>
        </td>
        <td><p>Gets locale.</p></td>
    </tr>



    <tr>
        <td>
            <pre class="intable prettyprint"><a href="#method-importModule">importModule</a> ( string fileName ) </pre>
        </td>
        <td><p>Puts the module into module array of <em>core.util.globalize</em>.</p></td>
    </tr>



    <tr>
        <td>
            <pre class="intable prettyprint">Deferred <a href="#method-setLocale">setLocale</a> ( string localeId ) </pre>
        </td>
        <td><p>Sets locale. This API is Async API.<br />Please use deferred callback functions which are returned (<em>done()</em>, <em>then()</em> etc).</p></td>
    </tr>


    </tbody>
</table>
<dl>


    <dt class="method" id="addidp28072"><code><b><span class="methodName"
                                                       id="method-getCalendar">getCalendar</span></b></code></dt>
    <dd>
        <div class="brief">
            <p>Gets Gregorian calendar.</p>
        </div>
        <div class="synopsis">
            <pre class="signature prettyprint">Object getCalendar ( ) </pre>
        </div>

        <div class="description">
            <p>

            </p>
        </div>



        <div class="returntype">
            <p><span class="return">Return value:</span></p>

            <table>
                <tbody>
                <tr>
                    <th>Type</th>
                    <th>Description</th>
                </tr>
                <tr>
                    <td>Object</td>
                    <td>Gregorian calendar data given locale.</td>
                </tr>
                </tbody>
            </table>


        </div>

    </dd>



    <dt class="method" id="addidp28072"><code><b><span class="methodName"
                                                       id="method-getLocale">getLocale</span></b></code></dt>
    <dd>
        <div class="brief">
            <p>Gets locale.</p>
        </div>
        <div class="synopsis">
            <pre class="signature prettyprint">string getLocale ( ) </pre>
        </div>

        <div class="description">
            <p>

            </p>
        </div>



        <div class="returntype">
            <p><span class="return">Return value:</span></p>

            <table>
                <tbody>
                <tr>
                    <th>Type</th>
                    <th>Description</th>
                </tr>
                <tr>
                    <td>string</td>
                    <td>Current locale</td>
                </tr>
                </tbody>
            </table>


        </div>

    </dd>



    <dt class="method" id="addidp28072"><code><b><span class="methodName"
                                                       id="method-importModule">importModule</span></b></code></dt>
    <dd>
        <div class="brief">
            <p>Puts the module into module array of core.util.globalize</p>
        </div>
        <div class="synopsis">
            <pre class="signature prettyprint">importModule ( string fileName) </pre>
        </div>

        <div class="description">
            <p>

            </p>
        </div>

        <div class="parameters">
            <p><span class="param">Parameters:</span></p>
            <table>
                <tbody>
                <tr>
                    <th>Parameter</th>
                    <th>Type</th>
                    <th>Required / optional</th>
                    <th>Default value</th>
                    <th>Description</th>
                </tr>


                <tr>
                    <td><span style="font-family: Courier New,Courier,monospace">fileName</span></td>
                    <td>string</td>
                    <td>Required</td>
                    <td></td>
                    <td></td>
                </tr>


                </tbody>
            </table>
        </div>

        <div class="returntype">
            <p><span class="return">Return value:</span></p>


            No return value

        </div>

    </dd>



    <dt class="method" id="addidp28072"><code><b><span class="methodName"
                                                       id="method-setLocale">setLocale</span></b></code></dt>
    <dd>
        <div class="brief">
            <p>Sets locale. This API is Async API.<br />Please use deferred callback functions which are returned (<em>done()</em>, <em>then()</em> etc)</p>
        </div>
        <div class="synopsis">
            <pre class="signature prettyprint">Deferred setLocale ( string localeId) </pre>
        </div>

        <div class="description">
            <p>

            </p>
        </div>

        <div class="parameters">
            <p><span class="param">Parameters:</span></p>
            <table>
                <tbody>
                <tr>
                    <th>Parameter</th>
                    <th>Type</th>
                    <th>Required / optional</th>
                    <th>Default value</th>
                    <th>Description</th>
                </tr>


                <tr>
                    <td><span style="font-family: Courier New,Courier,monospace">localeId</span></td>
                    <td>string</td>
                    <td>Required</td>
                    <td></td>
                    <td></td>
                </tr>


                </tbody>
            </table>
        </div>

        <div class="returntype">
            <p><span class="return">Return value:</span></p>

            <table>
                <tbody>
                <tr>
                    <th>Type</th>
                    <th>Description</th>
                </tr>
                <tr>
                    <td>Deferred</td>
                    <td></td>
                </tr>
                </tbody>
            </table>


        </div>

    </dd>


</dl>
<div id="footer">
    <hr size="1" />
    <font size="1">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</font>
</div>

<script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-25976949-1']);
    _gaq.push(['_trackPageview']);
    (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
</script>

</body>
</html>